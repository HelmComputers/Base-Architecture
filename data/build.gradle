apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: "findbugs"
apply plugin: "pmd"

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    def domainLayer = project(':domain')
    compile domainLayer

    def dependencies = rootProject.ext.dependencies

    //libraries
    compile dependencies.appcompat
    apt dependencies.daggerCompiler
    compile dependencies.dagger
    provided dependencies.javaxAnnotation

    //Test libraries
    testCompile dependencies.junit
    androidTestApt dependencies.daggerCompiler
    androidTestProvided dependencies.javaxAnnotation
    androidTestCompile dependencies.dagger

}

findbugs {
    sourceSets = []
    ignoreFailures = true
}

task findbugs(type: FindBugs, dependsOn: assembleDebug) {

    description 'Run findbugs'
    group 'verification'

    classes = fileTree('build/intermediates/classes/debug/')
    source = fileTree('src/main/java')
    classpath = files()

    effort = 'max'

    excludeFilter = file("config/findbugs/exclude.xml")

    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task pmd (type: Pmd, dependsOn: assembleDebug) {
    ignoreFailures = true
    description 'Run pmd'
    group 'verification'

    ruleSets = ["java-basic",
                "java-braces",
                "java-strings",
                "java-design",
                "java-codesize",
                "java-coupling" ,
                "java-empty",
                "java-typeresolution",
                "java-unnecessary",
                "java-unusedcode",
                "java-android"]
    source = fileTree('src/main/java')

    reports {
        xml.enabled = false
        html.enabled = true
    }
}




check.doLast {
    project.tasks.getByName("findbugs").execute()
    project.tasks.getByName("pmd").execute()

}
